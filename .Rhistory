shiny::runApp('infoclass/a6-checkn8knight')
# this is my app_ui file
df <- data.frame(midwest)
# chooses the column names I want for the x and y options
col_names <- colnames(df)
x_choices <- col_names[c(6, 12:16)]
y_choices <- col_names[c(23:26)]
#First Page
sidebar_one <- sidebarPanel(
p(),
x_input <- selectInput(
inputId = "x_val",
label = "Choose a x input:",
choices = x_choices
),
y_input <- selectInput(
inputId = "y_val",
label = "Choose a y input:",
choices = y_choices
)
)
main_one <- mainPanel(
p("Customizable Scatterplot of Poverty Percentages"),
plotOutput(outputId = "scatter")
)
page_one <- tabPanel(
"Scatterplot",
titlePanel("Poverty Percentage by Demographic in the Midwest"),
sidebarLayout(
sidebar_one,
main_one
)
)
# makes the data frame for the second page
state_data <- df %>%
group_by(state) %>%
summarize(
total_area = sum(area),
population = sum(poptotal),
pop_density = mean(popdensity),
percent_white = mean(percwhite),
percent_black = mean(percblack),
percent_american_indian = mean(percamerindan),
percent_asian = mean(percasian),
percent_other = mean(percother),
percent_poverty = mean(percbelowpoverty),
percent_child_poverty = mean(percchildbelowpovert),
percent_adult_poverty = mean(percadultpoverty),
percent_elderly_poverty = mean(percelderlypoverty)
)
# gets list of col names
state_col_names <- colnames(state_data)
state_col_names <- state_col_names[c(2:13)]
# creates vector of full state names to add to the data frame to help make the
# merges
full_state_name <- c("illinois", "indiana", "michigan", "ohio", "wisconsin")
# adds the new column to the data frame
state_data <- mutate(state_data, region = full_state_name)
# merges the map data with my data frame and filters in by the states im using
default_map <- map_data("state")
state_map <- left_join(states_map, state_data, by = "region") %>%
filter(
region == "illinois" |
region == "indiana" |
region == "michigan" |
region == "ohio" |
region == "wisconsin")
#Second Page
sidebar_two <- sidebarPanel(
p(),
comparison_input <- selectInput(
inputId = "comparison",
label = "Choose what to compare by:",
choices = state_col_names
)
)
main_two <- mainPanel(
p("Comparison of Different Factors (darker blue = higher)"),
plotOutput(outputId = "map")
)
page_two <- tabPanel(
"Map",
titlePanel("Comparison Map of States in the Midwest"),
sidebarLayout(
sidebar_two,
main_two
)
)
#Create top-level UI
ui <- navbarPage(
"Poverty in the Midwest",
page_one,
page_two
)
# this is my app_server file
server <- function(input, output) {
output$scatter <- renderPlot({
ggplot(data = df) +
geom_point(
mapping = aes_(x = as.name(input$x_val), y = as.name(input$y_val)),
color = "Blue"
)
})
output$map <- renderPlot({
ggplot(state_map) +
geom_polygon(
mapping = aes_(x = ~long, y = ~lat, group = ~group,
fill = as.name(input$comparison)),
color = "Lightgray",
size = .1
)+
coord_map()+
scale_fill_continuous(low = "#03a9f4", high = "#23395d")+
labs(fill = as.character(input$comparison))
})
}
runApp('infoclass/a6-checkn8knight')
runApp('infoclass/a6-checkn8knight')
states_map <- data.frame(states_map)
data <- read.csv("data/countryContinent 2.csv", stringsAsFactors = FALSE)
View(data)
final_data <- read.csv("data/final_data.csv", stringsAsFactors = FALSE)
library("dplyr")
data <- select(data,
country,
continent)
colnames(data)[1] = "Country.or.region"
data <- unique(data)
data[236, "Country.or.region" ] <- "United States"
data[235, "Country.or.region"] <- "United Kingdom"
final_data2 <- left_join(final_data, data, by = "Country.or.region")
View(final_data2)
final_data2[26, "continent"] <- "Asia"
write.csv(final_data2, "data/final_data2.csv", row.names = FALSE)
shiny::runApp('infoclass/INFO201_group_project-')
